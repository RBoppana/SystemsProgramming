when the program opens a file, it will create an array in that execution which is just 28 long and contains indexes. then it gonna start reading
the header row with elements delimited by commas. for the first element it will take that element and there will be a constant array with all of
the names of the valid column names. it will find that name and get the number in the array of that name. if the column isnt there the file wont 
be considered. once it gets the index number, it will store that number into the array of 28. after having read each element and doing that, the 
array of 28 will eventually have an integer for each column name with up to 28. now to read in the data, the program will go row by row and initialize 
a struct for each row, containing nulls. once a struct is set, it will begin reading the row, delimiting by commas. with the first element, it 
will pass in the string value, the number of that column in the 28 array (which will be incrememnted to the next number everytime a column is read,
and the pointer to the struct being initialized. if a 28 array goes out of bounds, that means the there were too many elements in a row and that 
csv shouldnt be considered. 

the structs will all be put into a link list that is created for each file. once all of the rows are processed, the link list will have been validated 
because none of the rows had too many elements and there were no errors. it will be appended (to the front/back whatever is easier) to an ongoing
large link list that exists in the heap and then the thread will have completed its steps.